name: Branch Merge Automation

on:
  workflow_dispatch:
    inputs:
      merge_direction:
        description: "Direction of merge"
        required: true
        default: "dev-to-main"
        type: choice
        options:
          - "main-to-dev"
          - "dev-to-main"
      description:
        description: "Optional description for the merge"
        required: false
        default: ""

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Configure Git
        with:
          token: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config pull.rebase false

      - name: Create merge branch (main-to-dev)
        if: ${{ github.event.inputs.merge_direction == 'main-to-dev' }}
        run: |
          # Create branch name with timestamp
          BRANCH_NAME="main-to-dev-$(date +%Y-%m-%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          # Create branch from dev and pull from main
          git checkout dev
          git checkout -b $BRANCH_NAME
          git pull origin main --no-edit
          git push origin $BRANCH_NAME

          echo "SOURCE_BRANCH=main" >> $GITHUB_ENV
          echo "TARGET_BRANCH=dev" >> $GITHUB_ENV

      - name: Create merge branch (dev-to-main)
        if: ${{ github.event.inputs.merge_direction == 'dev-to-main' }}
        run: |
          # Create branch name with timestamp
          BRANCH_NAME="dev-to-main-$(date +%Y-%m-%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          # Create branch from main and pull from dev
          git checkout main
          git checkout -b $BRANCH_NAME
          git pull origin dev --no-edit
          git push origin $BRANCH_NAME

          echo "SOURCE_BRANCH=dev" >> $GITHUB_ENV
          echo "TARGET_BRANCH=main" >> $GITHUB_ENV

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Automated merge: ${process.env.SOURCE_BRANCH} → ${process.env.TARGET_BRANCH}`,
              head: process.env.BRANCH_NAME,
              base: process.env.TARGET_BRANCH,
              body: `
            ## Automated Branch Merge

            **Direction:** \`${process.env.SOURCE_BRANCH}\` → \`${process.env.TARGET_BRANCH}\`
            **Branch:** \`${process.env.BRANCH_NAME}\`
            **Triggered by:** @${context.actor}

            ${context.payload.inputs.description ? `**Description:** ${context.payload.inputs.description}` : ''}

            This PR was created automatically by the branch merge workflow.
            It will be automatically merged if all checks pass.

            ---
            *Generated by GitHub Actions*
              `,
              draft: false
            });

            // Enable auto-merge
            await github.rest.pulls.createReviewRequest({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullRequest.number,
              reviewers: []
            });

            // Set auto-merge to squash
            try {
              await github.rest.pulls.enableAutoMerge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pullRequest.number,
                merge_method: 'squash'
              });
              console.log('Auto-merge enabled for PR #' + pullRequest.number);
            } catch (error) {
              console.log('Could not enable auto-merge:', error.message);
            }

            console.log('Created PR #' + pullRequest.number);

      - name: Summary
        run: |
          echo "## Branch Merge Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Direction:** ${{ env.SOURCE_BRANCH }} → ${{ env.TARGET_BRANCH }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch created:** ${{ env.BRANCH_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Pull request created with auto-merge enabled" >> $GITHUB_STEP_SUMMARY
